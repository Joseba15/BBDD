-- Ejercicio 1:
CREATE OR REPLACE PROCEDURE PROC_EJ1 (NUM NUMBER, LETRA1 VARCHAR2(1), LETRA2 VARCHAR2(1))
    AS
     NUM_NEGATIVO    EXCEPTION;
     LETRAS_IGUALES  EXCEPTION;
     ACUM VARCHAR2(20);  -- VARIABLE QUE VA ACUMULANDO EL NUMERO DE VECES QUE SE VA A IMPRIMIR

BEGIN
        IF  NUM <0 THEN
                RAISE NUM_NEGATIVO;
        ELSIF LETRA1=LETRA2 THEN
                RAISE  LETRAS_IGUALES;
        ELSE

              FOR I IN 0..NUM LOOP
                    FOR J  IN 0..NUM LOOP
                            ACUM:=LETRA1+ACUM;
                            DBMS_OUTPUT.PUT_LINE(ACUM );
                        END LOOP;
                  END LOOP;
        END IF;

        EXCEPTION
        WHEN NUM_NEGATIVO THEN
                DBMS_OUTPUT.PUT_LINE('El numero introducido es negativo');
        WHEN LETRAS_IGUALES THEN
                 DBMS_OUTPUT.PUT_LINE('Las letras introducidas son iguales');


END;

BEGIN
        PROC_EJ1(2,'A','B');
END;


--------------------------------------------------

-- EJERCICIO 2:

CREATE OR REPLACE TRIGGER EJ2
    INSTEAD OF INSERT OR UPDATE OR DELETE ON VISTA_PROYECCIONES

    BEGIN
                IF INSERTING THEN
                        INSERT INTO  PROYECCION (CINE, SALA, CIP, FECHA_ESTRENO) VALUES (:NEW.proyeccion_cine, :NEW.proyeccion_sala, :NEW.proyeccion_cip, :NEW.proyeccion_fechaestreno);
                        INSERT INTO  SALA (CINE, SALA, AFORO) VALUES (:NEW.salacine, :NEW.sala, :NEW.sala_aforo);

                ELSIF UPDATING  THEN
                    UPDATE PROYECCION SET CINE= :NEW.PROYECCION_CINE  , SALA = :NEW.PROYECCION_SALA , CIP =  :NEW.PROYECCION_CIP , FECHA_ESTRENO = :NEW.PROYECCION_FECHAESTRENO
                    WHERE CINE= :OLD.PROYECCION_CINE  AND SALA = :OLD.PROYECCION_SALA AND CIP =  :OLD.PROYECCION_CIP AND FECHA_ESTRENO = :OLD.PROYECCION_FECHAESTRENO ;


                    UPDATE SALA SET CINE = :NEW.SALACINE ,  SALA= :NEW.SALA,  AFORO= :NEW.SALA_AFORO
                     WHERE   CINE = :OLD.SALACINE AND  SALA= :OLD.SALA AND  AFORO= :OLD.SALA_AFORO;


                ELSIF DELETING  THEN
                        DELETE FROM PROYECCION WHERE CINE= :OLD.PROYECCION_CINE AND  SALA= :OLD.PROYECCION_SALA AND CIP = :OLD.PROYECCION_CIP AND  FECHA_ESTRENO = :OLD.PROYECCION_FECHAESTRENO;
                        DELETE FROM SALA WHERE CINE= :OLD.SALACINE  AND   SALA= :OLD.SALA AND SALA=   :OLD.SALA_AFORO;




                END IF;
    END;

-- instrucciones de prueba para el ejercicio 2:

INSERT INTO VISTA_PROYECCIONES VALUES ('El Arcangel', 4, '11111101-S', TO_DATE('05/02/1997', 'DD/MM/YYYY'), 'El Arcangel',8, 200);
UPDATE VISTA_PROYECCIONES SET PROYECCION_FECHAESTRENO=TO_DATE('10/01/2000', 'DD/MM/YYYY') WHERE PROYECCION_CINE='El Arcangel' AND PROYECCION_SALA=4 AND PROYECCION_CIP='11111101-S' AND PROYECCION_FECHAESTRENO=TO_DATE('05/02/1997', 'DD/MM/YYYY') AND SALACINE='El Arcangel' AND SALA=8;
DELETE FROM VISTA_PROYECCIONES WHERE PROYECCION_CINE='El Arcangel' AND PROYECCION_SALA=4 AND PROYECCION_CIP='11111101-S' AND PROYECCION_FECHAESTRENO=TO_DATE('05/02/2000', 'DD/MM/YYYY') AND SALACINE='El Arcangel' AND SALA=8;

SELECT * FROM VISTA_PROYECCIONES;

SELECT * FROM CINE;
SELECT * FROM PROYECCION p ;
SELECT * FROM SALA;




--------------------------------------------------------

-- EJERCICIO 3:

SELECT * FROM PELICULA WHERE ANO_PRODUCCION= 1998;   -- Utilizo esta query de ejemplo para mirar todas las peli que pertenecen a ese año

CREATE OR REPLACE TRIGGER EJ3
    BEFORE INSERT ON PELICULA
    FOR EACH ROW
    DECLARE
            V_PRESUPUESTO_TOTAL NUMBER;

    BEGIN
        SELECT (SUM(P.PRESUPUESTO)+ :NEW.PRESUPUESTO) INTO V_PRESUPUESTO_TOTAL
        FROM PELICULA P
        WHERE P.ANO_PRODUCCION = :NEW.ANO_PRODUCCION;


        IF V_PRESUPUESTO_TOTAL>16000 THEN
                    RAISE_APPLICATION_ERROR('-20007','El presupuesto total de todas las peliculas de ese año supera 16000');
        END IF;

    END;

-- Instruccion de prueba para el ejercicio 3:

INSERT INTO PELICULA VALUES('11111111-Y', 'Star Wars', 1998,  ' Star Wars', 'EEUU', 20000, 200);

--------------------------------------------------------------------------




-- EJERCICIO 4:

CREATE  SEQUENCE  SEC_ID_TRANS
    START WITH 1
    INCREMENT BY 1;

CREATE TABLE AUDITORIA_PELICULAS (
    ID_TRANSACCION NUMBER(6),
    CODIGO_PELICULA  VARCHAR2(20),
    PRESUPUESTO_ANTERIOR NUMBER(6),
    PRESUPUESTO_NUEVO NUMBER(6),

    CONSTRAINT PK_AUDITORIA_PELICULAS PRIMARY KEY (ID_TRANSACCION)
);


CREATE OR REPLACE TRIGGER EJ4
    AFTER UPDATE ON PELICULA
    FOR EACH ROW

    BEGIN

        INSERT INTO AUDITORIA_PELICULAS VALUES (SEC_ID_TRANS.nextval, :OLD.CIP, :OLD.PRESUPUESTO, :NEW.PRESUPUESTO);
    END;

-- Instruccion de prueba para el ejercicio 3:

SELECT  * FROM PELICULA WHERE CIP='11111121-S';  -- Buscamos una tabla a updatear
UPDATE  PELICULA SET PRESUPUESTO= 450  WHERE CIP='11111121-S';  -- Cambiamos su presupuesto

SELECT * FROM AUDITORIA_PELICULAS;   -- En esta instruccion comprobamos que la pelicula updateada ha sido insertada en AUDITORIA_PELICULAS
